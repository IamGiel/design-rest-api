package com.beroe.live.datacleansing.web.rest;

import com.beroe.live.datacleansing.service.ThomsonReutersService;
import com.codahale.metrics.annotation.Timed;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.Map;

/**
 * REST controller for managing ThomsonReutersResource.
 */
@RestController  
@RequestMapping("/api")
public class ThomsonReutersResource {

    private final Logger log = LoggerFactory.getLogger(ThomsonReutersResource.class);
    
    private final String ENTITY_NAME = this.getClass().getName();

    private final ThomsonReutersService thomsonReutersService;

    public ThomsonReutersResource(ThomsonReutersService thomsonReutersService) {
        this.thomsonReutersService = thomsonReutersService;
    }

    @Timed
    @PostMapping("/thomsonReuters/permID/dataCleanse")
    public ResponseEntity<?> dataCleanse(@RequestParam(name = "id", required = true) String id) throws URISyntaxException {
    
		try {
			thomsonReutersService.permID(id);
		} 
		catch (Exception ex) {

			log.debug(ENTITY_NAME + " : api/thomsonReuters/permID/dataCleanse " + ex.getMessage());
    		Map<String, String> resMap = new HashMap<String, String>();
    		resMap.put("Message", ex.getMessage());
    		return new ResponseEntity<>(resMap, HttpStatus.BAD_REQUEST);
		}
		
    	return new ResponseEntity<>(HttpStatus.OK);
    }
}