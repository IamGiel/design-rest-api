package com.gelrestwebservices.restfulwebservices.crudOperations;

import java.util.Date;

import javax.validation.constraints.Size;
import java.util.Objects;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import org.springframework.boot.autoconfigure.domain.EntityScan;
// import org.springframework.data.annotation.Id;

//import org.aspectj.weaver.ast.Var;
//import org.omg.CORBA.PRIVATE_MEMBER;
//import org.springframework.boot.autoconfigure.data.redis.RedisProperties.Lettuce;
//
//import com.fasterxml.jackson.annotation.JsonIgnore;
//import com.fasterxml.jackson.annotation.JsonManagedReference;
//import com.gelrestwebservices.restfulwebservices.post.Post;

import io.swagger.annotations.ApiModel;

@ApiModel(description = "All details about the todos")
@Entity
public class toDo {

	@Id // create this as id
	@GeneratedValue // create this as value generated by database
	private Long id;
	private String description;
	private Date setDate;
	private String username;
	private Boolean isDone;

	// JPA expects a default constructor
	// protected ToDo() {}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public Date getSetDate() {
		System.out.println("TESTING DATE >>>>> " + setDate);
		return setDate;
	}

	public void setSetDate(Date setDate) {
		System.out.println("TESTING DATE >>>>> " + setDate);
		this.setDate = setDate;
	}

	public Boolean getIsDone() {
		return isDone;
	}

	public void setIsDone(Boolean isDone) {
		this.isDone = isDone;
	}

	public toDo(Long id, @Size(min = 3, message = "Name Should be atleast 3 length") String description, Date setDate,
			String username, Boolean isDone) {
		super();
		this.id = id;
		this.description = description;
		this.setDate = setDate;
		this.username = username;
		this.isDone = isDone;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		System.out.println("this is RESULT of HASHCODE >>>> " + result);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		toDo other = (toDo) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

}
